<head>
  <link rel="stylesheet" href="style.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.jsdelivr.net/npm/svg-pen-sketch"></script>
</head>

<style>
  body {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow: hidden;
    -webkit-user-select: none !important;
    -moz-user-select: -moz-none !important;
    -ms-user-select: none !important;
    user-select: none !important;
    background: white !important;
    align-items: normal;
  }

  .main {
    height: 100%;
    display: flex;
    width: 100%;
    min-height: 0;
  }

  #pdf-viewer {
    flex: 1;
    padding: 20px;
    overflow: auto;
    display: flex;
    flex-direction: column;
  }

  #omr-card {
    width: 300px;
    padding: 20px;
    background-color: #f0f0f0;
    display: flex;
    flex-direction: column;
  }

  .memo {
    width: 300px;
    padding: 20px;
    background-color: #f0f0f0;
    display: flex;
    flex-direction: column;
  }

  #notepad {
    width: 100%;
    height: 100%;
    outline: none;
    border: none;
    resize: none;
  }

  .table-container {
    flex: 1;
    overflow-y: auto;
  }

  table {
    width: 100%;
    border-collapse: collapse;
  }

  h1,
  h2 {
    margin: 0;
  }

  th,
  td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: center;
  }

  th {
    background-color: #f2f2f2;
    position: sticky;
    top: 0;
    z-index: 1;
  }

  .controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 10px;

    &>button {
      margin: 0;
    }

    &>div {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
  }

  #canvas-container {
    flex: 1;
    position: relative;
    overflow: hidden;
    /* width: 100vw;
    height: 100vh; */
  }

  #canvas {
    width: 100%;
    height: 100%;
    cursor: crosshair;
    position: absolute;
    z-index: 2;
    overflow: hidden;
  }

  .highlighted {
    background-color: #f0f8ff;
  }

  #submit-btn {
    display: block;
    width: 100%;
    padding: 10px;
    border: none;
    border-radius: 5px;
    background-color: #5865F2;
    color: white;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
    margin-top: 20px;
  }

  #submit-btn:hover {
    background-color: #4752C4;
  }

  .btn {
    display: block;
    width: 60px;
    padding: 10px;
    border: none;
    border-radius: 5px;
    background-color: #5865F2;
    color: white;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  #img {
    position: absolute;
    pointer-events: none;
  }
</style>

<header>
  <div class="controls">
    <button id="prev-question" class="btn">이전</button>
    <div>
      <h1>마창연합학력평가</h1>
      <span id="question-num"></span>
    </div>
    <button id="next-question" class="btn">다음</button>
  </div>
</header>
<div class="main">
  <div class="memo">
    <h2>메모</h2>
    <textarea name="memo" id="notepad"></textarea>
  </div>
  <div id="pdf-viewer">
    <div id="canvas-container">
      <svg id="canvas"></svg>
      <img id="img" src="data:image/jpg;base64,<%= images[1] %>" />

    </div>
  </div>
  <div id="omr-card">
    <h2>OMR 카드</h2>
    <div class="table-container">
      <table>
        <thead>
          <tr>
            <th>문제</th>
            <th>1</th>
            <th>2</th>
            <th>3</th>
            <th>4</th>
            <th>5</th>
          </tr>
        </thead>
        <tbody>
          <% for(let i=1; i <=20; i++) { %>
          <tr>
            <td>
              <%= i %>
            </td>
            <% for(let j=1; j <=5; j++) { %>
            <td>
              <input type="radio" name="q<%= i %>" value="<%= j %>" id="q<%= i %>-<%= j %>" disabled>
              <label for="q<%= i %>-<%= j %>"></label>
            </td>
            <% } %>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>
    <button id="submit-btn">제출</button>
  </div>
</div>


<script>
  let canvas = document.getElementById("canvas");
  let notepad = document.getElementById("notepad");
  let currentQuestion = 1;
  const totalQuestions = 20;
  const images = "<%= images %>".split(",");
  let drawings;
  let memos;

  window.ondrag = (e) => {
    console.log(e)
  };

  window.onbeforeunload = () => {
    event.returnValue = true;
  }

  document.getElementById('prev-question').addEventListener('click', () => {
    if (currentQuestion > 1) {
      currentQuestion--;
      updateQuestionNumber();
    }
  });

  document.getElementById('next-question').addEventListener('click', () => {
    if (currentQuestion < totalQuestions) {
      currentQuestion++;
      updateQuestionNumber();
    }
  });

  document.querySelectorAll('.table-container tbody tr').forEach((row, index) => {
    row.addEventListener('click', () => {
      currentQuestion = index + 1;
      updateQuestionNumber();
    });
  });

  function updateQuestionNumber() {
    canvas.innerHTML = drawings.get(String(currentQuestion)) ?? '';
    notepad.value = memos.get(String(currentQuestion)) ?? '';
    document.getElementById('question-num').innerHTML = `문제 ${currentQuestion} / ${totalQuestions}`;
    document.querySelectorAll('.highlighted').forEach(row => row.classList.remove('highlighted'));
    const rowToHighlight = document.querySelector(`.table-container tbody tr:nth-child(${currentQuestion})`);
    if (rowToHighlight) rowToHighlight.classList.add('highlighted');

    try {
      // console.log(images.length)
      document.querySelector("#img").src = `data:image/jpg;base64,${images[currentQuestion]}`;
    } catch (e) {
      console.log(e)
    }
  }

  drawings = new Map(Object.entries(JSON.parse(localStorage.getItem('drawings') ?? '{}')));
  memos = new Map(Object.entries(JSON.parse(localStorage.getItem('memos') ?? '{}')));
  canvas.innerHTML = drawings.get(String(currentQuestion)) ?? '';
  notepad.value = memos.get(String(currentQuestion)) ?? '';
  updateQuestionNumber();

  // 드로잉 캔버스 설정
  let svgSketch = SvgPenSketch.default;

  const strokeStyle = {
    "stroke": "red",
    "stroke-width": "3px"
  };
  const sketch = new svgSketch(canvas, strokeStyle);

  sketch.getElement();
  sketch.penUpCallback = (path, event) => {
    drawings.set(String(currentQuestion), canvas.innerHTML);
    localStorage.setItem('drawings', JSON.stringify(Object.fromEntries(drawings)));
  };
  sketch.eraserUpCallback = (event) => {
    drawings.set(String(currentQuestion), canvas.innerHTML);
    localStorage.setItem('drawings', JSON.stringify(Object.fromEntries(drawings)));
  };


  notepad.oninput = () => {
    memos.set(String(currentQuestion), notepad.value);
    localStorage.setItem('memos', JSON.stringify(Object.fromEntries(memos)));
  };

  Array.from(document.querySelectorAll('input[type="radio"]')).forEach(x => x.oninput = getAnswers);

  let ws = new WebSocket("ws://localhost:3000/ans");

  ws.onopen = () => {
    Array.from(document.querySelectorAll('input[type="radio"]')).forEach(x => {
      x.disabled = false;
    });
  };

  function getAnswers() {
    let ans = {};
    for (let i = 1; i <= totalQuestions; i++) {
      ans[i] = undefined;
      for (let j = 1; j <= 5; j++) {
        if (document.getElementById(`q${i}-${j}`).checked) ans[i] = j;
      }
    }
    ws.send(JSON.stringify(ans))
    console.log(ans);
    
  }
</script>